name: Deploy Microservices and API Gateway to Cloud Run

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: ['authentication', 'user-management', 'team-management', 'schedule-management', 'player-ratings', 'match-ratings', 'carpool', 'payments']
      max-parallel: 4

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v1

      - name: Build and push Docker image
        run: |
          cd backend/services/${{ matrix.service }}
          gcloud builds submit --tag gcr.io/grassroots-football-management/microservice-${{ matrix.service }} 

          echo "Sleeping for 10 seconds before the next build..."
          sleep 10

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy microservice-${{ matrix.service }} \
            --image gcr.io/grassroots-football-management/microservice-${{ matrix.service }} \
            --platform managed \
            --region europe-west2 \
            --allow-unauthenticated

      - name: Cleanup Docker Images & Unused Artifacts
        if: success()
        run: |
          gcloud container images delete gcr.io/grassroots-football-management/microservice-${{ matrix.service }} --force-delete-tags --quiet
          echo "Removed old images from Container Registry."

          # Cleanup older Cloud Build artifacts
          gcloud builds list --filter="STATUS=SUCCESS" --format="value(ID)" | tail -n +6 | while read -r build_id; do
            gcloud builds cancel "$build_id" --quiet || true
          done
          echo "Old Cloud Build artifacts cleaned up."

  update-api-gateway:
    needs: deploy  # This job will run after the microservices are deployed
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v1

      - name: Deploy updated API config to API Gateway
        run: |
          cd backend/api
          
          API_VERSION=$(date +'%Y%m%d-%H%M%S')
          
          gcloud api-gateway api-configs create "v${API_VERSION}" \
            --api=gfm \
            --openapi-spec=openapi.yaml \
            --project=grassroots-football-management

          gcloud api-gateway gateways update grassroots-gateway \
            --api=gfm \
            --api-config="v${API_VERSION}" \
            --location=europe-west2 \
            --project=grassroots-football-management

      - name: Cleanup Old API Configurations
        if: success()
        run: |
          OLD_CONFIGS=$(gcloud api-gateway api-configs list --api=gfm --format="value(name)" | head -n -3)
          for config in $OLD_CONFIGS; do
            gcloud api-gateway api-configs delete "$config" --api=gfm --quiet || true
          done
          echo "Old API configurations cleaned up."
