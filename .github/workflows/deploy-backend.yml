name: Deploy Microservices and API Gateway to Cloud Run

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: ['authentication', 'team-management', 'schedule-management', 'match-management', 'carpool', 'payments', 'ai-chatbot', 'membership', 'profile', 'player-stats']
      max-parallel: 4

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v1

      - name: Build and push Docker image
        run: |
          cd backend/services/${{ matrix.service }}
          gcloud builds submit --tag gcr.io/grassroots-football-management/microservice-${{ matrix.service }} 

          echo "Sleeping for 10 seconds before the next build..."
          sleep 10

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy microservice-${{ matrix.service }} \
            --image gcr.io/grassroots-football-management/microservice-${{ matrix.service }} \
            --platform managed \
            --region europe-west2 \
            --no-allow-unauthenticated        

  update-api-gateway:
    needs: 
      - deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v1

      - name: Deploy updated API config to API Gateway
        run: |
          cd backend/api

          API_VERSION=$(date +'%Y%m%d-%H%M%S')
          
          gcloud api-gateway api-configs create "v${API_VERSION}" \
            --api=gfm \
            --openapi-spec=openapi.yaml \
            --project=grassroots-football-management

          gcloud api-gateway gateways update grassroots-gateway \
            --api=gfm \
            --api-config="v${API_VERSION}" \
            --location=europe-west2 \
            --project=grassroots-football-management
  
  apply-iam-policy:
    needs: 
      - deploy
      - update-api-gateway
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code  # ✅ Ensure workspace is not empty
        uses: actions/checkout@v3

      - name: Authenticate with Google Cloud  # ✅ Authenticate AFTER checkout
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v1

      - name: Apply IAM Policy to all microservices
        run: |
          for service in authentication team-management schedule-management match-management carpool payments ai-chatbot membership profile player-stats; do
            gcloud run services add-iam-policy-binding microservice-$service \
              --member=serviceAccount:api-gateway-sa@grassroots-football-management.iam.gserviceaccount.com \
              --role=roles/run.invoker \
              --region=europe-west2
                    done  
