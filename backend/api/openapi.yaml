swagger: '2.0'
info:
  title: Grassroots Football Management API
  description: API Gateway for Grassroots Football Management microservices
  version: 1.0.0
host: gfm-1ykrsotxghm8m.apigateway.grassroots-football-management.cloud.goog
x-google-endpoints:
- name: gfm-1ykrsotxghm8m.apigateway.grassroots-football-management.cloud.goog
  allowCors: True
schemes:
  - https
paths:
  # Authentication Microservice Routes
  /signup:
    post:
      x-google-backend:
        address: https://microservice-authentication-180320540339.europe-west2.run.app/signup  
      summary: Register a new user
      description: Register a new user with email, password, and name
      operationId: registerUser
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: User registration data
          required: true
          schema:
            type: object
            properties:
              email:
                type: string
              password:
                type: string
              name:
                type: string
              role:
                type: string
      responses:
        '201':
          description: User registered successfully
        '400':
          description: Invalid input or email already exists
        '500':
          description: Internal server error

  /signin:
    post:
      x-google-backend:
        address: https://microservice-authentication-180320540339.europe-west2.run.app/signin  
      summary: Sign in a user
      description: Authenticate a user with an ID token
      operationId: signInUser
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: User sign-in data
          required: true
          schema:
            type: object
            properties:
              idToken:
                type: string
      responses:
        '200':
          description: User signed in successfully
        '400':
          description: Invalid input
        '401':
          description: Invalid or expired ID token
        '500':
          description: Internal server error

  # User Management Microservice Routes
  /user/create:
    post:
      x-google-backend:
        address: https://microservice-user-management-180320540339.europe-west2.run.app/user/create
      summary: Create a new user in Firestore
      description: Create a new user document in Firestore with email, name, and role
      operationId: createUser
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: User creation data
          required: true
          schema:
            type: object
            properties:
              uid:
                type: string
              email:
                type: string
              name:
                type: string
              role:
                type: string
              clubName:
                type: string
              ageGroup:
                type: string
              division:
                type: string
              userRegistered:
                type: boolean
      responses:
        '201':
          description: User created successfully
        '400':
          description: Invalid input or user already exists
        '500':
          description: Internal server error
  
  /user/update:
    post:
      x-google-backend:
        address: https://microservice-user-management-180320540339.europe-west2.run.app/user/update  
      summary: Update a user's profile
      description: Update a user's profile in Firestore
      operationId: updateUserProfile
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: User profile data to update
          required: true
          schema:
            type: object
            properties:
              email:
                type: string
              name:
                type: string
      responses:
        '200':
          description: User profile updated successfully
        '400':
          description: Invalid input
        '500':
          description: Internal server error

  /user/check:
    get:
      x-google-backend:
        address: https://microservice-user-management-180320540339.europe-west2.run.app/user/check  
      summary: Check if a user exists
      description: Check if a user exists in Firestore by email
      operationId: checkUserExists
      produces:
        - application/json
      parameters:
        - in: query
          name: email
          description: The email of the user to check
          required: true
          type: string
      responses:
        '200':
          description: Successful response indicating whether the user exists
          schema:
            type: object
            properties:
              exists:
                type: boolean
              message:
                type: string
        '400':
          description: Missing or invalid email parameter
        '500':
          description: Internal server error

  /user/club-info:
    get:
      x-google-backend:
        address: https://microservice-user-management-180320540339.europe-west2.run.app/user/club-info 
      summary: Retrieve user's club information
      description: Retrieve the club information of a user in Firestore by email
      operationId: getUserClubInfo
      produces:
        - application/json
      parameters:
        - in: query
          name: email
          description: The email of the user to check
          required: true
          type: string
      responses:
        '200':
          description: Successful response indicating the user's club information
          schema:
            type: object
            properties:
              clubName:
                type: string
              ageGroup:
                type: string
              division:
                type: string
        '400':
          description: Missing or invalid email parameter
        '500':
          description: Internal server error

  # Team Management Microservice Routes
  /club/create-join:
    post:
      x-google-backend:
        address: https://microservice-team-management-180320540339.europe-west2.run.app/club/create-join
      summary: Create or join a club
      operationId: createOrJoinClub
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          required: true
          schema:
            type: object
            properties:
              clubName:
                type: string
              coachEmail:
                type: string
              ageGroups:
                type: array
                items:
                  type: string
              divisions:
                type: array
                items:
                  type: string
              county:
                type: string
      responses:
        '201':
          description: New club created
        '200':
          description: Coach added to existing club
        '400':
          description: Invalid input
        '500':
          description: Internal server error

  /club/search:
    get:
      x-google-backend:
        address: https://microservice-team-management-180320540339.europe-west2.run.app/club/search
      summary: Search for clubs
      operationId: searchClubs
      produces:
        - application/json
      parameters:
        - in: query
          name: clubName
          type: string
          description: Club name to search
          required: false
        - in: query
          name: county
          type: string
          description: County to filter by
          required: false
        - in: query
          name: ageGroup
          type: string
          description: Age group to filter by
          required: false
        - in: query
          name: division
          type: string
          description: Division to filter by
          required: false
      responses:
        '200':
          description: List of clubs
        '500':
          description: Internal server error

  /club/join-request:
    post:
      x-google-backend:
        address: https://microservice-team-management-180320540339.europe-west2.run.app/club/join-request
      summary: Submit a join request
      operationId: submitJoinRequest
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          required: true
          schema:
            type: object
            properties:
              name:
                type: string
              playerEmail:
                type: string
              clubName:
                type: string
              ageGroup:
                type: string
              division:
                type: string
      responses:
        '201':
          description: Join request submitted
        '400':
          description: Invalid input
        '500':
          description: Internal server error

  /club/requests:
    get:
      x-google-backend:
        address: https://microservice-team-management-180320540339.europe-west2.run.app/club/requests
      summary: Retrieve pending join requests
      operationId: getJoinRequests
      produces:
        - application/json
      parameters:
        - in: query
          name: clubName
          type: string
          description: The club name to retrieve join requests for
          required: true
        - in: query
          name: ageGroup
          type: string
          description: The age group to filter join requests by
          required: false
        - in: query
          name: division
          type: string
          description: The division to filter join requests by
          required: false
      responses:
        '200':
          description: List of pending join requests
        '400':
          description: Missing or invalid query parameters
        '500':
          description: Internal server error

  /club/requests/approve:
    post:
      x-google-backend:
        address: https://microservice-team-management-180320540339.europe-west2.run.app/club/requests/approve
      summary: Approve a player's join request
      operationId: approveJoinRequest
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          required: true
          schema:
            type: object
            properties:
              playerEmail:
                type: string
                description: Email of the player to approve
              clubName:
                type: string
                description: The club name where the player requested to join
              ageGroup:
                type: string
                description: The age group of the player
              division:
                type: string
                description: The division of the player
      responses:
        '200':
          description: Player added to the club
        '400':
          description: Missing or invalid parameters
        '500':
          description: Internal server error

  /club/requests/reject:
    post:
      x-google-backend:
        address: https://microservice-team-management-180320540339.europe-west2.run.app/club/requests/reject
      summary: Reject a player's join request
      operationId: rejectJoinRequest
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          required: true
          schema:
            type: object
            properties:
              playerEmail:
                type: string
                description: Email of the player to reject
              clubName:
                type: string
                description: The club name where the player requested to join
              ageGroup:
                type: string
                description: The age group of the player
              division: 
                type: string
                description: The division of the player
      responses:
        '200':
          description: Join request rejected
        '400':
          description: Missing or invalid parameters
        '500':
          description: Internal server error

  /club/players:
    get:
      x-google-backend:
        address: https://microservice-team-management-180320540339.europe-west2.run.app/club/players
      summary: Retrieve players for a specific club, age group, and division
      operationId: getPlayers
      produces:
        - application/json
      parameters:
        - in: query
          name: clubName
          type: string
          description: The club name to retrieve players for
          required: true
        - in: query
          name: ageGroup
          type: string
          description: The age group to filter players by
          required: true
        - in: query
          name: division
          type: string
          description: The division to filter players by
          required: true
      responses:
        '200':
          description: List of players for the specified criteria
        '400':
          description: Missing or invalid query parameters
        '500':
          description: Internal server error

  /club/players/remove:
    post:
      x-google-backend:
        address: https://microservice-team-management-180320540339.europe-west2.run.app/club/players/remove
      summary: Remove players from a club's roster
      operationId: removePlayers
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: JSON object containing club details and player emails to remove
          required: true
          schema:
            type: object
            properties:
              clubName:
                type: string
                description: The name of the club
                example: "Cobh Ramblers"
              ageGroup:
                type: string
                description: The age group of the players
                example: "Professional"
              division:
                type: string
                description: The division of the players
                example: "Division Premier"
              playerEmails:
                type: array
                items:
                  type: string
                description: List of player emails to remove from the club
                example: ["player1@email.com", "player2@email.com"]
      responses:
        '200':
          description: Players removed successfully
        '400':
          description: Missing or invalid parameters
        '500':
          description: Internal server error

  # Schedule Management Microservice Routes
  /schedule/matches:
    get:
      x-google-backend:
        address: https://microservice-schedule-management-180320540339.europe-west2.run.app/schedule/matches
      summary: Retrieve scheduled matches
      operationId: getScheduledMatches
      consumes:
        - application/json
      produces:
        - application/json
      description: Retrieve scheduled matches for a specific month, age group, and division.
      parameters:
        - name: month
          in: query
          description: The month to fetch matches for (format yyyy-MM).
          required: true
          type: string
        - name: clubName
          in: query
          description: The club name to filter matches by.
          required: true
          type: string
        - name: ageGroup
          in: query
          description: The age group to filter matches by.
          required: true
          type: string
        - name: division
          in: query
          description: The division to filter matches by.
          required: true
          type: string
      responses:
        '200':
          description: List of matches retrieved successfully.
          schema:
            type: array
            items:
              type: object
              properties:
                matchId:
                  type: string
                homeTeam:
                  type: string
                awayTeam:
                  type: string
                ageGroup:
                  type: string
                division:
                  type: string
                date:
                  type: string
                  format: date-time
                result:
                  type: object
                  properties:
                    homeScore:
                      type: integer
                    awayScore:
                      type: integer
        '400':
          description: Missing or invalid query parameters.
        '500':
          description: Internal server error.

  /schedule/add-fixture:
    post:
      x-google-backend:
        address: https://microservice-schedule-management-180320540339.europe-west2.run.app/schedule/add-fixture
      summary: Add a new fixture to the schedule.
      operationId: addFixture
      consumes:
        - application/json
      produces:
        - application/json
      description: Add a new match fixture to the schedule with details such as teams, age group, and date.
      parameters:
        - in: body
          name: body
          description: The details of the fixture to be added.
          required: true
          schema:
            type: object
            required:
              - homeTeam
              - awayTeam
              - ageGroup
              - division
              - date
              - createdBy
            properties:
              homeTeam:
                type: string
                description: The name of the home team.
              awayTeam:
                type: string
                description: The name of the away team.
              ageGroup:
                type: string
                description: The age group for the match.
              division:
                type: string
                description: The division for the match.
              date:
                type: string
                format: date-time
                description: The scheduled date and time of the match.
              createdBy:
                type: string
                description: The email of the user creating the fixture.
      responses:
        '201':
          description: Fixture added successfully.
        '400':
          description: Missing or invalid request data.
        '500':
          description: Internal server error.

  /schedule/update-result:
    put:
      x-google-backend:
        address: https://microservice-schedule-management-180320540339.europe-west2.run.app/schedule/update-result
      summary: Update a match result.
      operationId: updateMatchResult
      consumes:
        - application/json
      produces:
        - application/json
      description: Update the result of a scheduled match with scores for both teams.
      parameters:
        - in: body
          name: body
          description: The match result data to be updated.
          required: true
          schema:
            type: object
            required:
              - matchId
              - homeScore
              - awayScore
            properties:
              matchId:
                type: string
                description: The unique ID of the match to be updated.
              homeScore:
                type: integer
                description: The score for the home team.
              awayScore:
                type: integer
                description: The score for the away team.
      responses:
        '200':
          description: Match result updated successfully.
        '400':
          description: Missing or invalid request data.
        '500':
          description: Internal server error.

  /schedule/trainings:
    get:
      x-google-backend:
        address: https://microservice-schedule-management-180320540339.europe-west2.run.app/schedule/trainings
      summary: Retrieve scheduled training sessions
      operationId: getScheduledTrainings
      consumes:
        - application/json
      produces:
        - application/json
      description: Retrieve scheduled training sessions for a specific month, age group, and division.
      parameters:
        - name: month
          in: query
          description: The month to fetch training sessions for (format yyyy-MM).
          required: true
          type: string
        - name: clubName
          in: query
          description: The club name to filter training sessions by.
          required: true
          type: string
        - name: ageGroup
          in: query
          description: The age group to filter training sessions by.
          required: true
          type: string
        - name: division
          in: query
          description: The division to filter training sessions by.
          required: true
          type: string
      responses:
        '200':
          description: List of training sessions retrieved successfully.
          schema:
            type: array
            items:
              type: object
              properties:
                trainingId:
                  type: string
                ageGroup:
                  type: string
                division:
                  type: string
                date:
                  type: string
                  format: date-time
                location:
                  type: string
                notes:
                  type: string
                createdBy:
                  type: string
        '400':
          description: Missing or invalid query parameters.
        '500':
          description: Internal server error.

  /schedule/add-training:
    post:
      x-google-backend:
        address: https://microservice-schedule-management-180320540339.europe-west2.run.app/schedule/add-training
      summary: Add a new training session to the schedule
      operationId: addTrainingSession
      consumes:
        - application/json
      produces:
        - application/json
      description: Add a new training session to the schedule with details such as age group, division, date, and location.
      parameters:
        - in: body
          name: body
          description: The details of the training session to be added.
          required: true
          schema:
            type: object
            required:
              - ageGroup
              - division
              - date
              - location
              - createdBy
            properties:
              ageGroup:
                type: string
                description: The age group for the training session.
              division:
                type: string
                description: The division for the training session.
              date:
                type: string
                format: date-time
                description: The scheduled date and time of the training session.
              location:
                type: string
                description: The location where the training session will be held.
              notes:
                type: string
                description: Any additional notes about the training session.
              createdBy:
                type: string
                description: The email of the user creating the training session.
      responses:
        '201':
          description: Training session added successfully.
        '400':
          description: Missing or invalid request data.
        '500':
          description: Internal server error.

  /schedule/save-match-data:
    post:
      x-google-backend:
        address: https://microservice-schedule-management-180320540339.europe-west2.run.app/schedule/save-match-data
      summary: Save or update tactics for a match
      description: Save or update tactics, formation, strategy notes, and team lineups in the matches collection.
      operationId: saveMatchTactics
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Match tactics data to be saved
          required: true
          schema:
            type: object
            required:
              - matchId
              - formation
            properties:
              matchId:
                type: string
                description: The unique identifier for the match.
              formation:
                type: string
                description: The team's selected formation.
                example: "4-4-2"
              strategyNotes:
                type: string
                description: Coach's strategic notes for the match.
                example: "Play high press in the first half."
              homeTeamLineup:
                type: object
                description: The lineup for the home team (position to player ID mapping).
                additionalProperties:
                  type: string
                example:
                  GK: "player_uid_1"
                  RB: "player_uid_2"
                  CB: "player_uid_3"
              awayTeamLineup:
                type: object
                description: The lineup for the away team (position to player ID mapping).
                additionalProperties:
                  type: string
                example:
                  GK: "player_uid_4"
                  LB: "player_uid_5"
                  CB: "player_uid_6"
      responses:
        '200':
          description: Tactics saved successfully.
          schema:
            type: object
            properties:
              message:
                type: string
                example: "Tactics saved successfully"
        '400':
          description: Missing or invalid request data.
          schema:
            type: object
            properties:
              error:
                type: string
                example: "matchId and formation are required"
        '404':
          description: Match not found.
          schema:
            type: object
            properties:
              error:
                type: string
                example: "Match not found"
        '500':
          description: Internal server error.
          schema:
            type: object
            properties:
              error:
                type: string
                example: "Internal server error"
